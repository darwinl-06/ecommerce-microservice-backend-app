# Kibana Configuration for Ecommerce Microservices Log Visualization
# Compatible with GKE and Jenkins CI/CD

# Image configuration
image: "docker.elastic.co/kibana/kibana"
imageTag: "8.8.0"
imagePullPolicy: "IfNotPresent"

# Elasticsearch connection
elasticsearchHosts: "http://elasticsearch-master.monitoring.svc.cluster.local:9200"

# Resource configuration
resources:
  requests:
    cpu: "500m"
    memory: "1Gi"
  limits:
    cpu: "1000m"
    memory: "2Gi"

# Service configuration
service:
  type: LoadBalancer
  port: 5601
  nodePort: ""
  annotations: {}
  loadBalancerSourceRanges: []
  httpPortName: http

# Ingress configuration (optional)
ingress:
  enabled: false
  className: ""
  pathtype: Prefix
  annotations: {}
  hosts:
    - host: kibana.ecommerce.local
      paths:
        - path: /
  tls: []

# Kibana configuration
kibanaConfig:
  kibana.yml: |
    # Server configuration
    server.name: kibana
    server.host: 0.0.0.0
    server.port: 5601
    server.basePath: ""
    server.maxPayloadBytes: 1048576
    
    # Elasticsearch configuration
    elasticsearch.hosts: ["http://elasticsearch-master.monitoring.svc.cluster.local:9200"]
    elasticsearch.pingTimeout: 1500
    elasticsearch.requestTimeout: 30000
    elasticsearch.shardTimeout: 30000
    elasticsearch.ssl.verificationMode: none
    
    # Security configuration (disabled for testing)
    xpack.security.enabled: false
    xpack.encryptedSavedObjects.encryptionKey: "fhjskloppd678ehkdfdlliverpoolfcr"
    
    # Monitoring
    monitoring.ui.container.elasticsearch.enabled: true
    
    # Logging
    logging.level: info
    logging.quiet: false
    logging.dest: stdout
    
    # Data views and index patterns
    data.autocomplete.valueSuggestions.enabled: true
    data.autocomplete.valueSuggestions.timeout: 1000
    
    # Maps
    map.includeElasticMapsService: true
    
    # Telemetry
    telemetry.enabled: false
    telemetry.optIn: false
    
    # Default index patterns for ecommerce logs
    kibana.defaultAppId: "discover"

# Security context
securityContext:
  capabilities:
    drop:
    - ALL
  runAsNonRoot: true
  runAsUser: 1000
  allowPrivilegeEscalation: false

# Pod security context
podSecurityContext:
  fsGroup: 1000
  runAsUser: 1000
  runAsGroup: 1000

# Environment variables
extraEnvs:
  - name: NODE_OPTIONS
    value: "--max-old-space-size=1800"
  - name: ELASTICSEARCH_HOSTS
    value: "http://elasticsearch-master.monitoring.svc.cluster.local:9200"

# Health checks
healthCheckPath: "/app/kibana"

readinessProbe:
  httpGet:
    path: /app/kibana
    port: 5601
  initialDelaySeconds: 30
  periodSeconds: 10
  timeoutSeconds: 5
  failureThreshold: 3
  successThreshold: 1

livenessProbe:
  httpGet:
    path: /app/kibana
    port: 5601
  initialDelaySeconds: 60
  periodSeconds: 10
  timeoutSeconds: 5
  failureThreshold: 3
  successThreshold: 1

# Persistent storage (optional for saved objects)
persistence:
  enabled: false
  size: 5Gi
  storageClass: "standard-rwo"
  accessMode: ReadWriteOnce

# Service account
serviceAccount:
  create: true
  name: kibana

# Pod annotations
podAnnotations:
  prometheus.io/scrape: "true"
  prometheus.io/port: "5601"
  prometheus.io/path: "/api/stats"

# Node selector
nodeSelector: {}

# Tolerations
tolerations: []

# Affinity
affinity: {}

# Priority class
priorityClassName: ""

# Init containers for index pattern setup
extraInitContainers: |
  - name: wait-for-elasticsearch
    image: curlimages/curl:7.85.0
    command:
    - /bin/sh
    - -c
    - |
      until curl -s "http://elasticsearch-master.monitoring.svc.cluster.local:9200/_cluster/health?wait_for_status=yellow&timeout=180s"; do
        echo "Waiting for Elasticsearch to be ready..."
        sleep 10
      done
      echo "Elasticsearch is ready!"

# Lifecycle hooks
lifecycle:
  preStop:
    exec:
      command:
        - /bin/bash
        - -c
        - |
          echo "Kibana is shutting down..."
          sleep 5

# Labels
labels: {}

# Pod labels
podLabels: {}

# Annotations
annotations: {}

# Image pull secrets
imagePullSecrets: []

# Host aliases
hostAliases: []

# Extra volumes
extraVolumes: []

# Extra volume mounts
extraVolumeMounts: []

# Extra containers
extraContainers: []

# Update strategy
updateStrategy:
  type: Recreate

# Replicas
replicas: 1

# Anti-affinity
antiAffinity: "soft"

# HTTP configuration
httpPort: 5601

# Protocol
protocol: http

# Server host
serverHost: "0.0.0.0"

# Minimum master nodes
minimumMasterNodes: 1

# Tests configuration
tests:
  enabled: true
