# Elasticsearch Configuration for Ecommerce Microservices Logging
# Minimal configuration for testing environment on GKE

# Cluster settings
clusterName: "ecommerce-elasticsearch"
nodeGroup: "master"

# Single node setup for testing
replicas: 1
minimumMasterNodes: 1

# Resource configuration for testing environment
resources:
  requests:
    cpu: "300m"
    memory: "512Mi"
  limits:
    cpu: "1000m"
    memory: "1Gi"

# JVM heap size (should be 50% of memory limit)
esJavaOpts: "-Xmx1g -Xms1g"

# Persistent storage
persistence:
  enabled: true
  size: 30Gi
  storageClass: "standard-rwo"  # GKE standard storage class

# Security configuration (disabled for testing)
xpack:
  enabled: false

# Service configuration
service:
  type: ClusterIP
  httpPort: 9200
  transportPort: 9300

# Network host configuration
networkHost: "0.0.0.0"

# Discovery configuration for single node
discovery:
  type: single-node

# Elasticsearch configuration
esConfig:
  elasticsearch.yml: |
    cluster.name: ecommerce-elasticsearch
    node.name: ${HOSTNAME}
    
    # Network settings
    network.host: 0.0.0.0
    http.port: 9200
    transport.port: 9300
    
    # Discovery settings for single node
    discovery.type: single-node
    
    # Security settings (disabled for testing)
    xpack.security.enabled: false
    xpack.security.transport.ssl.enabled: false
    xpack.security.http.ssl.enabled: false
    
    # Index settings
    action.auto_create_index: true
    action.destructive_requires_name: false
    
    # Log settings
    logger.level: INFO
    
    # Index lifecycle management
    indices.lifecycle.poll_interval: 10m
    
    # Memory settings
    bootstrap.memory_lock: false

# Index templates for microservices logs
extraInitContainers: |
  - name: configure-indices
    image: curlimages/curl:7.85.0
    command:
    - /bin/sh
    - -c
    - |
      # Wait for Elasticsearch to be ready
      until curl -s "http://localhost:9200/_cluster/health?wait_for_status=yellow&timeout=60s"; do
        echo "Waiting for Elasticsearch..."
        sleep 5
      done
      
      # Create index template for microservices logs
      curl -X PUT "http://localhost:9200/_index_template/ecommerce-logs" \
        -H "Content-Type: application/json" \
        -d '{
          "index_patterns": ["ecommerce-*"],
          "template": {
            "settings": {
              "number_of_shards": 1,
              "number_of_replicas": 0,
              "index.lifecycle.name": "ecommerce-logs-policy",
              "index.lifecycle.rollover_alias": "ecommerce-logs"
            },
            "mappings": {
              "properties": {
                "@timestamp": {
                  "type": "date"
                },
                "level": {
                  "type": "keyword"
                },
                "message": {
                  "type": "text",
                  "analyzer": "standard"
                },
                "service": {
                  "type": "keyword"
                },
                "kubernetes": {
                  "properties": {
                    "pod_name": {
                      "type": "keyword"
                    },
                    "namespace_name": {
                      "type": "keyword"
                    },
                    "container_name": {
                      "type": "keyword"
                    }
                  }
                },
                "trace_id": {
                  "type": "keyword"
                },
                "span_id": {
                  "type": "keyword"
                }
              }
            }
          }
        }'

# Ingress configuration (disabled)
ingress:
  enabled: false

# Pod security context
podSecurityContext:
  fsGroup: 1000
  runAsUser: 1000
  runAsGroup: 1000

# Security context
securityContext:
  capabilities:
    drop:
    - ALL
  runAsNonRoot: true
  runAsUser: 1000
  allowPrivilegeEscalation: false

# Node selector for GKE
nodeSelector: {}

# Tolerations
tolerations: []

# Affinity rules
affinity: {}

# Image configuration
image: "docker.elastic.co/elasticsearch/elasticsearch"
imageTag: "8.8.0"
imagePullPolicy: "IfNotPresent"

# Service account
serviceAccount:
  create: true
  name: ""
  annotations: {}

# Pod annotations
podAnnotations:
  prometheus.io/scrape: "true"
  prometheus.io/port: "9114"
  prometheus.io/path: "/metrics"

# Environment variables
extraEnvs:
  - name: ES_JAVA_OPTS
    value: "-Xmx1g -Xms1g"
  - name: discovery.type
    value: single-node

# Health checks
readinessProbe:
  httpGet:
    path: /_cluster/health?local=true
    port: 9200
  initialDelaySeconds: 30
  periodSeconds: 10
  timeoutSeconds: 5
  failureThreshold: 3
  successThreshold: 1

livenessProbe:
  httpGet:
    path: /_cluster/health?local=true
    port: 9200
  initialDelaySeconds: 90
  periodSeconds: 10
  timeoutSeconds: 5
  failureThreshold: 3
  successThreshold: 1

# Lifecycle hooks
lifecycle:
  preStop:
    exec:
      command:
        - /bin/bash
        - -c
        - |
          curl -X POST "localhost:9200/_cluster/nodes/_local/_shutdown"
          sleep 30
