# Kube-Prometheus-Stack Values
# Este archivo configura el stack completo de monitoreo con Prometheus, Grafana y Alertmanager

# Configuración de Prometheus
prometheus:
  enabled: true
  prometheusSpec:
    # Retención de métricas
    retention: 30d
    # Recursos
    resources:
      requests:
        memory: "512Mi"
        cpu: "100m"
      limits:
        memory: "1Gi"
        cpu: "500m"
    # Almacenamiento persistente
    storageSpec:
      volumeClaimTemplate:
        spec:
          storageClassName: standard
          accessModes: ["ReadWriteOnce"]
          resources:
            requests:
              storage: 10Gi

# Configuración de Grafana
grafana:
  enabled: true
  # Admin credentials
  adminUser: admin
  adminPassword: admin123
  
  # Configuración de persistencia
  persistence:
    enabled: true
    storageClassName: standard
    size: 5Gi
      # Configuración del servicio
  service:
    type: LoadBalancer
    port: 80
    
  # Dashboards por defecto - mantener los que vienen con el stack
  defaultDashboardsEnabled: true
  defaultDashboardsTimezone: "UTC"
  
  # Configuración adicional de Grafana
  grafana.ini:
    server:
      domain: localhost
      root_url: "http://localhost:3000"
    security:
      allow_embedding: true
    auth.anonymous:
      enabled: true
      org_role: Viewer
    users:
      allow_sign_up: false
      
  # Datasources - Prometheus será configurado automáticamente
  sidecar:
    dashboards:
      enabled: true
      searchNamespace: ALL
    datasources:
      enabled: true

# Configuración de Alertmanager
alertmanager:
  enabled: true
  alertmanagerSpec:
    resources:
      requests:
        memory: "128Mi"
        cpu: "50m"
      limits:
        memory: "256Mi"
        cpu: "100m"
    storage:
      volumeClaimTemplate:
        spec:
          storageClassName: standard
          accessModes: ["ReadWriteOnce"]
          resources:
            requests:
              storage: 2Gi

# Node Exporter para métricas del sistema
nodeExporter:
  enabled: true

# Kube State Metrics para métricas de Kubernetes
kubeStateMetrics:
  enabled: true

# Configuración del Prometheus Operator
prometheusOperator:
  enabled: true
  resources:
    requests:
      memory: "128Mi"
      cpu: "50m"
    limits:
      memory: "256Mi"
      cpu: "100m"

# ServiceMonitors adicionales para tu aplicación
additionalServiceMonitors:
  # Ejemplo para monitorear tus microservicios
  - name: microservices-monitor
    selector:
      matchLabels:
        app: microservice
    endpoints:
    - port: metrics
      path: /actuator/prometheus
      interval: 30s

# PrometheusRules personalizadas (opcional)
additionalPrometheusRules:
  - name: microservices-rules
    groups:
    - name: microservices.rules
      rules:
      - alert: ServiceDown
        expr: up == 0
        for: 1m
        labels:
          severity: critical
        annotations:
          summary: "Service {{ $labels.instance }} is down"
          description: "Service {{ $labels.instance }} has been down for more than 1 minute."
